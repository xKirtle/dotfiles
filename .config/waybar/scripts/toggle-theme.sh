#!/usr/bin/env bash
set -euo pipefail
# Generated by ChatGPT -> Rewrite myself eventually

### --- Configuration ---
# Colloid theme name changed?
# THEME_LIGHT="Colloid-Teal-Light"
# THEME_DARK="Colloid-Teal-Dark"
THEME_LIGHT="arch-update-Teal-Light"
THEME_DARK="arch-update-Teal-Dark"

ICON_LIGHT="Colloid-Teal"
ICON_DARK="Colloid-Teal"

CURSOR_LIGHT="Bibata-Modern-Classic"
CURSOR_DARK="Bibata-Modern-Ice"
CURSOR_SIZE_DEFAULT=24

### --- Paths ---
GTK3="$HOME/.config/gtk-3.0/settings.ini"
GTK4_DIR="$HOME/.config/gtk-4.0"
XSETCONF="$HOME/.config/xsettingsd/xsettingsd.conf"

### --- Helpers ---
ensure_ini() {
  local f="$1"
  mkdir -p "$(dirname "$f")"
  [[ -f "$f" ]] || printf "[Settings]\n" >"$f"
  grep -q '^\[Settings\]' "$f" || printf "\n[Settings]\n" >>"$f"
}

set_kv_ini() { # file key value
  local f="$1" key="$2" val="$3"
  ensure_ini "$f"
  awk -v key="$key" -v val="$val" '
    BEGIN{ insec=0; seen=0 }
    /^\[/{ if(insec && !seen) print key"="val; insec = ($0=="[Settings]") }
    {
      if(insec && $0 ~ "^[[:space:]]*"key"[[:space:]]*="){
        if(!seen){print key"="val; seen=1}; next
      }
      print
    }
    END{
      if(!insec && !seen){ print ""; print "[Settings]"; print key"="val }
      else if(insec && !seen){ print key"="val }
    }' "$f" >"$f.tmp" && mv "$f.tmp" "$f"
}

read_kv_ini() { # file key -> value or empty
  local f="$1" key="$2"
  awk -F= -v key="$key" '
    BEGIN{ insec=0 }
    /^\[/{ insec = ($0=="[Settings]"); next }
    insec && $1 ~ "^[[:space:]]*"key"[[:space:]]*$" {
      gsub(/^[[:space:]]+|[[:space:]]+$/, "", $2); print $2; exit
    }' "$f" 2>/dev/null || true
}

ensure_xsettingsd() {
  mkdir -p "$(dirname "$XSETCONF")"
  [[ -f "$XSETCONF" ]] || : >"$XSETCONF"
}

set_xsetting() { # key value
  local key="$1" val="$2"
  ensure_xsettingsd
  if grep -q "^$key[[:space:]]" "$XSETCONF" 2>/dev/null; then
    sed -i -E "s|^$key[[:space:]]+.*|$key $val|g" "$XSETCONF"
  else
    printf "%s %s\n" "$key" "$val" >>"$XSETCONF"
  fi
}

reload_xsettingsd() {
  if pgrep -x xsettingsd >/dev/null; then
    pkill -HUP xsettingsd || true
  else
    nohup xsettingsd >/dev/null 2>&1 &
  fi
}

read_cursor_size() {
  local v
  v="$(read_kv_ini "$GTK3" "gtk-cursor-theme-size")"
  [[ -n "$v" ]] && echo "$v" || echo "$CURSOR_SIZE_DEFAULT"
}

get_prefer_dark() {
  local v
  v="$(read_kv_ini "$GTK3" "gtk-application-prefer-dark-theme")"
  [[ "$v" == "1" ]] && echo 1 || echo 0
}

apply_gtk4_theme() {
  local theme="$1" icon="$2" cursor="$3" csize="$4" dark="$5"
  local src="/usr/share/themes/$theme/gtk-4.0"
  mkdir -p "$GTK4_DIR"
  rm -rf "$GTK4_DIR/gtk.css" "$GTK4_DIR/gtk-dark.css" "$GTK4_DIR/assets" "$GTK4_DIR/settings.ini"
  ln -s "$src/gtk.css" "$GTK4_DIR/gtk.css"
  ln -s "$src/gtk-dark.css" "$GTK4_DIR/gtk-dark.css"
  ln -s "$src/assets" "$GTK4_DIR/assets"
  cat >"$GTK4_DIR/settings.ini" <<EOF
[Settings]
gtk-theme-name=$theme
gtk-icon-theme-name=$icon
gtk-cursor-theme-name=$cursor
gtk-cursor-theme-size=$csize
gtk-application-prefer-dark-theme=$dark
EOF
}

### --- Apply State ---
apply_state() { # arg: 0|1
  local dark="$1" theme icon cursor csize
  if [[ "$dark" == "1" ]]; then
    theme="$THEME_DARK"; icon="$ICON_DARK"; cursor="$CURSOR_DARK"
  else
    theme="$THEME_LIGHT"; icon="$ICON_LIGHT"; cursor="$CURSOR_LIGHT"
  fi
  csize="$(read_cursor_size)"

  # --- GTK3 settings ---
  set_kv_ini "$GTK3" "gtk-application-prefer-dark-theme" "$dark"
  set_kv_ini "$GTK3" "gtk-theme-name" "$theme"
  set_kv_ini "$GTK3" "gtk-icon-theme-name" "$icon"
  set_kv_ini "$GTK3" "gtk-cursor-theme-name" "$cursor"
  set_kv_ini "$GTK3" "gtk-cursor-theme-size" "$csize"

  # --- GTK4 theme files ---
  apply_gtk4_theme "$theme" "$icon" "$cursor" "$csize" "$dark"

  # --- xsettingsd (for live GTK3 apps) ---
  set_xsetting "Gtk/ApplicationPreferDarkTheme" "$dark"
  set_xsetting "Net/ThemeName" "\"$theme\""
  set_xsetting "Net/IconThemeName" "\"$icon\""
  set_xsetting "Gtk/CursorThemeName" "\"$cursor\""
  set_xsetting "Gtk/CursorThemeSize" "$csize"
  reload_xsettingsd

  # --- gsettings (Libadwaita/GTK4) ---
  if command -v gsettings >/dev/null 2>&1; then
    gsettings set org.gnome.desktop.interface gtk-theme "$theme" || true
    gsettings set org.gnome.desktop.interface icon-theme "$icon" || true
    gsettings set org.gnome.desktop.interface cursor-theme "$cursor" || true
    gsettings set org.gnome.desktop.interface cursor-size "$csize" || true
    if [[ "$dark" == "1" ]]; then
      gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark' || true
    else
      gsettings set org.gnome.desktop.interface color-scheme 'default' || true
    fi
  fi

  # --- Apply cursor instantly (Hyprland) ---
  if command -v hyprctl >/dev/null 2>&1; then
    hyprctl setcursor "$cursor" "$csize" >/dev/null 2>&1 || true
  fi

  # --- swaync restart ---
  if pgrep -x swaync >/dev/null; then
    pkill -x swaync
    sleep 0.2
  fi
  swaync >/dev/null 2>&1 &

  # --- swayosd restart ---
  pkill -x swayosd-server 2>/dev/null || true
  sleep 0.2
  swayosd-server >/dev/null 2>&1 &
}

### --- Main ---
case "${1:-status}" in
  toggle)
    new="$((1 - $(get_prefer_dark)))"
    apply_state "$new"
    pkill -RTMIN+8 waybar 2>/dev/null || true
    state="$new"
    ;;
  set)
    [[ "${2:-}" =~ ^[01]$ ]] || { echo "usage: $0 set 0|1" >&2; exit 2; }
    apply_state "$2"
    pkill -RTMIN+8 waybar 2>/dev/null || true
    state="$2"
    ;;
  status)
    state="$(get_prefer_dark)"
    ;;
  *)
    echo "usage: $0 [status|toggle|set 0|1]" >&2
    exit 2
    ;;
esac

### --- Waybar JSON Output ---
if [[ "$state" == "1" ]]; then
  printf '{"text":"","tooltip":"Dark theme (%s)","class":"dark"}\n' "$THEME_DARK"
else
  printf '{"text":"","tooltip":"Light theme (%s)","class":"light"}\n' "$THEME_LIGHT"
fi


# Persistent config: edits settings.ini (GTK3/4) so new apps start with the right theme, cursor and icons
# Live update: updates xsettingsd and reloads it so running apps get changes immediately (GTK3 and most GTK4 apps)
# GNOME compatiblity: uses gsettings so Libadwaita apps follow along.
# Hyprland compatibility: runs hyprctl setcursor so the cursor theme changes instantly in Hyprland.
# Waybar integration: signals Waybar + prints JSON output so the bar updates without polling.
# Explicit restarts: restarts swaync and swayosd if running so they pick up the new theme.